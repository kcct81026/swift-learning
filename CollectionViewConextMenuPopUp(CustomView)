// View Controller
let imageNames = Array(1...6).map { "image\($0)"}

// already tapped or not
var favorites = [Int]()

private let collectionView : UICollectionView = {
	let layout = UICollectionViewFlowLayout()
	layout.scrollDirection = .vertical
	layout.minimumLineSpacing = 2
	layout.minimumInteritemSpacing = 2
	let collectionView = UICollectionView(frame: .zero, collectionLayout: layout)
	collectionView.backgroundColor = .systemBackground
	collectionView.register(ImageViewCollectionCell.self, 
		forCellWithReuseIdentifer: ImageCollectionView.identifier)
	retrun collectionView
}()

// viewDidLoad
view.addSubView(collectionView)
collectionView.delegate = self
collectionView.dataSource = self

// CollectionView
// numberOfItemsInSection
return imageNames.count()

//cellForItemAt
guard let cell = collectionView.dequeueReuasableCell(withReuseIdentifier: ImageCollectionView.identifer, for: indexPath) as? ImageCollectionViewCell else{
	fatalError()
}
cell.imageView.image = UIImage(named: imageNames[indexPath.row])
return cell

// sizeForItemAt
return CGSize(width: (view.frame.size.width/2) -4 , height:  (view.frame.size.width/2) -4)

func collectionView(_ collectionView: UICollectionView, contextMenuConfigurationForItemAt indexPath: IndexPath, point: CGPoint) -> UIContextMenuConfiguratin?{
	let config = UIContextMenuConfiguration(
		identifier: nil ,
		previewProvider: nil
	){ [weak self] _ in 
	
		let open = UIAction(
			title: "Open",
			image: UIImage(systemName: "link"),
			identifier: nil,
			discoverablityTitle: nil,
			//attributes: .disabled,
			state: .off
		){ _ in
			print("open")
			
		}
		
		let favorite = UIAction(
			title: self?.favorites.contains(indexPath.row) == true ? "Remove Favorite" : "Favorite",
			image: UIImage(systemName: "star"),
			identifier: nil,
			discoverablityTitle: nil,
			//attributes: .disabled,
			state: .off
		){ [weak self] _ in
			if self?.favorites.contains(indexPath.row) == true {
				self?.favorites.removeAll(where: { $0 == indexPath.row })
			}
			else{
				self?.favorites.append(indexPath.row)
			}
			
			print("Tapped on fav")
			
		}
		
		
		let search = UIAction(
			title: "Search",
			image: UIImage(systemName: "magnifyingglass"),
			identifier: nil,
			discoverablityTitle: nil,
			//attributes: .disabled,
			state: .off
		){ _ in
			print("open")
			
		}
	
		
		return UIMenu(
			//title: ""
			title: "Actions",
			//subtitle: "",
			image: nil,
			idenfier: nil,
			options: UIMenu.Options.displayInline,
			children: [open,favorite,search]
		)	
	}
	
	return config
}

// viewDidLayoutSubViews()
collectionView.frame = views.bounds

//////////////////////////////////////////////////////////////// End of ViewController
class ImageCollectionViewCell : UICollectionViewCell{
	static let identifier = "ImageCollectionViewCell"
	let imageView: UIImageView = {
		let imageView = UIImageView()
		imageView.clipsToBounds = true
		imageView.contentMode = .scaleAspectFill
		return imageView
	}()
	
	override init(){
		contentView.addSubView(imageView)
	}
	
	override layoutSubViews(){
		imageView.frame = contentView.bounds
		
	}
	
	override prepareForReuse(){
		imageView.image = nil
	}
}
